/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2017-10-13 14:46:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.Charpter7;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cn.mldn.lxh.factory.*;
import cn.mldn.lxh.vo.*;
import java.util.*;

public final class emp_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("cn.mldn.lxh.factory");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cn.mldn.lxh.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("    <title>欢迎光临-www.flowingsun.com</title>\n");
      out.write("  </head>\n");
      out.write("  ");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\n');
      out.write(' ');
      out.write(' ');
      com.lucifer.lyon.demo.Register reg = null;
      reg = (com.lucifer.lyon.demo.Register) _jspx_page_context.getAttribute("reg", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (reg == null){
        reg = new com.lucifer.lyon.demo.Register();
        _jspx_page_context.setAttribute("reg", reg, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\n");
      out.write("<body>\n");

try{
    String keyWord = request.getParameter("kw"); //接收查询关键字
    if (keyWord==null){                          //判断是否有传递的参数
        keyWord = "";
    }
    List<Emp> all = DAOFactory.getIEmpDAOInstance().findAll(keyWord);//取得全部记录
    Iterator<Emp> iter = all.iterator();          //实例化Iterator对象

      out.write("\n");
      out.write("<center>\n");
      out.write("<form action=\"emp_list.jsp\" method=\"post\">\n");
      out.write("    请输入查询关键字<input type=\"text\" nama=\"kw\">\n");
      out.write("    <input type=\"submit\" value=\"查询\">\n");
      out.write("</form>\n");
      out.write("<table border=\"1\" width=\"80%\">\n");
      out.write("    <tr>\n");
      out.write("        <td>雇员编号</td>\n");
      out.write("        <td>雇员姓名</td>\n");
      out.write("        <td>雇员工作</td>\n");
      out.write("        <td>雇员工资</td>\n");
      out.write("        <td>雇员日期</td>\n");
      out.write("    </tr>\n");

    while(iter.hasNext()){
        Emp emp = iter.next();      //取出每一个Emp对象

      out.write("\n");
      out.write("    <tr>\n");
      out.write("       <td>");
      out.print(emp.getEmpno());
      out.write("</td>\n");
      out.write("       <td>");
      out.print(emp.getEname());
      out.write("</td>\n");
      out.write("       <td>");
      out.print(emp.getJob());
      out.write("</td>\n");
      out.write("       <td>");
      out.print(emp.getSal());
      out.write("</td>\n");
      out.write("       <td>");
      out.print(emp.getHiredate());
      out.write("</td>\n");
      out.write("    </tr>\n");

    }

      out.write("\n");
      out.write("</table>\n");
      out.write("</center>\n");

}catch(Exception e){
     e.printStackTrace();
}

      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
